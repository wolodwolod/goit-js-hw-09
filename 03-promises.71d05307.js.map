{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","firstDelayInp","delayStepInp","amountInp","onCreatePromises","e","preventDefault","console","log","value","amountState","Number","currentDelay","i","setTimeout","createPromise","then","catch","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener"],"mappings":";AACA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,cAAeF,SAASC,cAAc,uBACtCE,aAAcH,SAASC,cAAc,sBACrCG,UAAWJ,SAASC,cAAc,yBAWtC,SAASI,EAAiBC,GACtBA,EAAEC,iBAEFC,QAAQC,IAAIX,EAAKK,aAAaO,OAC9BF,QAAQC,IAAIX,EAAKI,cAAcQ,OAC/BF,QAAQC,IAAIX,EAAKM,UAAUM,OAGvBC,IAAAA,EAAcC,OAAOd,EAAKM,UAAUM,OACpCG,EAAeD,OAAOd,EAAKI,cAAcQ,OAExC,IAAA,IAAII,EAAI,EAAGA,GAAKH,EAAaG,GAAG,EAEjCN,QAAQC,IAAIK,GACZN,QAAQC,IAAII,GACZA,GAAgBD,OAAOd,EAAKK,aAAaO,OAEzCK,WAAW,KACPC,EAAcF,EAAGD,GACZI,KAAK,KAAQT,QAAQC,2BAA2BK,QAAQD,SACxDK,MAAM,KAAQV,QAAQC,0BAA0BK,QAAQD,UAC9DA,GASX,SAASG,EAAcG,EAAUC,GACvBC,MAAAA,EAAgBC,KAAKC,SAAW,GAE/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAGrBL,GACAI,yBAC4BN,QAAeC,OAE/CM,wBAC2BP,QAAeC,SAjDlDZ,QAAQC,IAAIX,EAAKK,cACjBK,QAAQC,IAAIX,EAAKI,eACjBM,QAAQC,IAAIX,EAAKM,WACjBI,QAAQC,IAAIX,EAAKC,MAGjBD,EAAKC,KAAK4B,iBAAiB,SAAUtB","file":"03-promises.71d05307.js","sourceRoot":"../src","sourcesContent":["\nconst refs = {\n    form: document.querySelector('.form'),\n    firstDelayInp: document.querySelector('input[name=\"delay\"]'),\n    delayStepInp: document.querySelector('input[name=\"step\"]'),\n    amountInp: document.querySelector('input[name=\"amount\"]'),\n};\n\nconsole.log(refs.delayStepInp);\nconsole.log(refs.firstDelayInp);\nconsole.log(refs.amountInp);\nconsole.log(refs.form);\n\n\nrefs.form.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(e) {\n    e.preventDefault();\n\n    console.log(refs.delayStepInp.value);\n    console.log(refs.firstDelayInp.value);\n    console.log(refs.amountInp.value);\n\n    \n    let amountState = Number(refs.amountInp.value);\n    let currentDelay = Number(refs.firstDelayInp.value);\n\n    for (let i = 1; i <= amountState; i+=1) {\n\n        console.log(i);\n        console.log(currentDelay);\n        currentDelay += Number(refs.delayStepInp.value);\n\n        setTimeout(() => {\n            createPromise(i, currentDelay)\n                .then(() => { console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`) })\n                .catch(() => { console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`) });\n        }, currentDelay)\n\n\n    };\n\n    // console.log(currentDelay.value);\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n\n\n        if (shouldResolve) {\n            resolve\n                (`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }\n        reject\n            (`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n}\n\n\n"]}